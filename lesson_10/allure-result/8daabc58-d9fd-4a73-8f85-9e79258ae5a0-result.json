{"name": "The Slowest Calculator", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSessionIdException: Message: invalid session id: session deleted as the browser has closed the connection\nfrom disconnected: not connected to DevTools\n  (Session info: chrome=135.0.7049.115)\nStacktrace:\n\tGetHandleVerifier [0x00F3D363+60275]\n\tGetHandleVerifier [0x00F3D3A4+60340]\n\t(No symbol) [0x00D706F3]\n\t(No symbol) [0x00D5FF20]\n\t(No symbol) [0x00D7DDA2]\n\t(No symbol) [0x00DE3D2F]\n\t(No symbol) [0x00DFDFE9]\n\t(No symbol) [0x00DDCE86]\n\t(No symbol) [0x00DAC623]\n\t(No symbol) [0x00DAD474]\n\tGetHandleVerifier [0x01188FE3+2467827]\n\tGetHandleVerifier [0x011845E6+2448886]\n\tGetHandleVerifier [0x0119F80C+2560028]\n\tGetHandleVerifier [0x00F53DF5+153093]\n\tGetHandleVerifier [0x00F5A3BD+179149]\n\tGetHandleVerifier [0x00F44BB8+91080]\n\tGetHandleVerifier [0x00F44D60+91504]\n\tGetHandleVerifier [0x00F2FA10+4640]\n\tBaseThreadInitThunk [0x75DAFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77CD82AE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77CD827E+238]", "trace": "@allure.id(\"Calculator\")\n    @allure.epic(\"Calculator\")\n    @allure.title(\"The Slowest Calculator\")\n    @allure.severity(\"BLOCKER\")\n    @allure.feature(\"ENTER\")\n    @allure.description(\"Тест проверяет работу самого медленного калькулятора:\"\n                        \" правильный результат должен отобразиться \"\n                        \"через указанное кол-во секунд\")\n    def test_calculator():\n        with allure.step(\"Проверка формы ввода\"):\n            delay = Delay(driver)\n            delay.form_delay(\"45\")\n    \n        with allure.step(\"Проверка работы кнопок калькулятора\"):\n            buttons = Buttons(driver)\n            buttons.enter_numbers()\n    \n        with allure.step(\"Проверка работы явного ожидания\"):\n            wait1 = WebDriverWait(driver, 46)\n>           wait1.until(\n                EC.text_to_be_present_in_element(\n                    (By.CSS_SELECTOR, \".screen\"), \"15\")\n                    )\n\nкалькулятор_test.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:137: in until\n    value = method(self._driver)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:403: in _predicate\n    element_text = driver.find_element(*locator).text\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000249105351D0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"invalid session id\",\"message\":\"invalid session id: session deleted as the...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77CD82AE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77CD827E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSessionIdException: Message: invalid session id: session deleted as the browser has closed the connection\nE       from disconnected: not connected to DevTools\nE         (Session info: chrome=135.0.7049.115)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00F3D363+60275]\nE       \tGetHandleVerifier [0x00F3D3A4+60340]\nE       \t(No symbol) [0x00D706F3]\nE       \t(No symbol) [0x00D5FF20]\nE       \t(No symbol) [0x00D7DDA2]\nE       \t(No symbol) [0x00DE3D2F]\nE       \t(No symbol) [0x00DFDFE9]\nE       \t(No symbol) [0x00DDCE86]\nE       \t(No symbol) [0x00DAC623]\nE       \t(No symbol) [0x00DAD474]\nE       \tGetHandleVerifier [0x01188FE3+2467827]\nE       \tGetHandleVerifier [0x011845E6+2448886]\nE       \tGetHandleVerifier [0x0119F80C+2560028]\nE       \tGetHandleVerifier [0x00F53DF5+153093]\nE       \tGetHandleVerifier [0x00F5A3BD+179149]\nE       \tGetHandleVerifier [0x00F44BB8+91080]\nE       \tGetHandleVerifier [0x00F44D60+91504]\nE       \tGetHandleVerifier [0x00F2FA10+4640]\nE       \tBaseThreadInitThunk [0x75DAFCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77CD82AE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77CD827E+238]\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: InvalidSessionIdException"}, "description": "Тест проверяет работу самого медленного калькулятора: правильный результат должен отобразиться через указанное кол-во секунд", "steps": [{"name": "Проверка формы ввода", "status": "passed", "start": 1746380007355, "stop": 1746380009216}, {"name": "Проверка работы кнопок калькулятора", "status": "passed", "start": 1746380009216, "stop": 1746380009689}, {"name": "Проверка работы явного ожидания", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSessionIdException: Message: invalid session id: session deleted as the browser has closed the connection\nfrom disconnected: not connected to DevTools\n  (Session info: chrome=135.0.7049.115)\nStacktrace:\n\tGetHandleVerifier [0x00F3D363+60275]\n\tGetHandleVerifier [0x00F3D3A4+60340]\n\t(No symbol) [0x00D706F3]\n\t(No symbol) [0x00D5FF20]\n\t(No symbol) [0x00D7DDA2]\n\t(No symbol) [0x00DE3D2F]\n\t(No symbol) [0x00DFDFE9]\n\t(No symbol) [0x00DDCE86]\n\t(No symbol) [0x00DAC623]\n\t(No symbol) [0x00DAD474]\n\tGetHandleVerifier [0x01188FE3+2467827]\n\tGetHandleVerifier [0x011845E6+2448886]\n\tGetHandleVerifier [0x0119F80C+2560028]\n\tGetHandleVerifier [0x00F53DF5+153093]\n\tGetHandleVerifier [0x00F5A3BD+179149]\n\tGetHandleVerifier [0x00F44BB8+91080]\n\tGetHandleVerifier [0x00F44D60+91504]\n\tGetHandleVerifier [0x00F2FA10+4640]\n\tBaseThreadInitThunk [0x75DAFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77CD82AE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77CD827E+238]\n\n", "trace": "  File \"C:\\Users\\User\\Desktop\\Репозиторий\\Python\\lesson_10\\калькулятор_test.py\", line 39, in test_calculator\n    wait1.until(\n    ~~~~~~~~~~~^\n        EC.text_to_be_present_in_element(\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            (By.CSS_SELECTOR, \".screen\"), \"15\")\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            )\n            ^\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 137, in until\n    value = method(self._driver)\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 403, in _predicate\n    element_text = driver.find_element(*locator).text\n                   ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 898, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1746380009689, "stop": 1746380018038}], "start": 1746380007355, "stop": 1746380018049, "uuid": "58d5c742-e5c4-4fc9-a8b0-60c9adec8bbd", "historyId": "7875525e7f3e8f53f2ce768a33d7b2dc", "testCaseId": "7875525e7f3e8f53f2ce768a33d7b2dc", "fullName": "lesson_10.калькулятор_test#test_calculator", "labels": [{"name": "as_id", "value": "Calculator"}, {"name": "feature", "value": "ENTER"}, {"name": "epic", "value": "Calculator"}, {"name": "severity", "value": "BLOCKER"}, {"name": "parentSuite", "value": "lesson_10"}, {"name": "suite", "value": "калькулятор_test"}, {"name": "host", "value": "WIN-CBM94B0PS5E"}, {"name": "thread", "value": "10220-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "lesson_10.калькулятор_test"}]}